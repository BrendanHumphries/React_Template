{"ast":null,"code":"var _jsxFileName = \"/home/brendan/Development/code/Phase-2/Labs/React_Template/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    fetch('https://catfact.ninja/facts').then(resp => resp.json()).then(json => {\n      json.data.map(item => {\n        return /*#__PURE__*/_jsxDEV(Fact, {\n          fact: item.fact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CAT FACTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/brendan/Development/code/Phase-2/Labs/React_Template/src/components/App.js"],"names":["React","useEffect","useState","App","fetch","then","resp","json","data","map","item","fact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZA,MAAAA,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAcC,IAAI,IAAI;AACpB,4BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAI,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJD;AAKD,KARH;AASD,GAVQ,CAAT;AAYA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBQR,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nfunction App() {\n  useEffect(() => {\n    fetch('https://catfact.ninja/facts')\n      .then(resp => resp.json())\n      .then(json => {\n        json.data.map(item => {\n          return (\n            <Fact fact={item.fact} />\n          )\n        })\n      })\n  })\n  \n  return (\n    <div>\n      <h1>CAT FACTS</h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}