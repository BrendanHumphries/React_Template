{"ast":null,"code":"var _jsxFileName = \"/home/brendan/Development/code/Phase-2/Labs/React_Template/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Fact from \"./Fact\";\nimport catJam from '../data/catJam.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [catFactsList, setCatFactsList] = useState(null);\n  useEffect(() => {\n    fetch('https://catfact.ninja/facts').then(resp => resp.json()).then(json => {\n      setCatFactsList(json.data);\n    });\n  }, []);\n\n  if (!catFactsList) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CAT FACTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), catFactsList.map(item => {\n      return /*#__PURE__*/_jsxDEV(Fact, {\n        someFact: item.fact\n      }, item.fact, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YiSsy7jfvCH3Z4T5kl/6WVy9AfI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/brendan/Development/code/Phase-2/Labs/React_Template/src/components/App.js"],"names":["React","useEffect","useState","Fact","catJam","App","catFactsList","setCatFactsList","fetch","then","resp","json","data","map","item","fact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZJ,MAAAA,eAAe,CAACI,IAAI,CAACC,IAAN,CAAf;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAI,CAACN,YAAL,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,YAAY,CAACO,GAAb,CAAiBC,IAAI,IAAI;AACxB,0BACE,QAAC,IAAD;AAAsB,QAAA,QAAQ,EAAEA,IAAI,CAACC;AAArC,SAAWD,IAAI,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1BQV,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport Fact from \"./Fact\";\nimport catJam from '../data/catJam.gif'\n\nfunction App() {\n  const [catFactsList, setCatFactsList] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://catfact.ninja/facts')\n      .then(resp => resp.json())\n      .then(json => {\n        setCatFactsList(json.data)\n      })\n  }, [])\n\n  if (!catFactsList) {\n    return <p>Loading...</p>\n  }\n  \n  return (\n    <div>\n      <h1>CAT FACTS</h1>\n      \n      {catFactsList.map(item => {\n        return (\n          <Fact key={item.fact} someFact={item.fact} />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}